<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>IteratorAlgorithms.GetIterator&lt;TValue&gt; Method</title><meta name="Title" content="GetIterator&lt;TValue&gt;" /><meta name="Help.Id" content="M:Podaga.PersistentCollections.Tree.IteratorAlgorithms.GetIterator``1(Podaga.PersistentCollections.Tree.JoinableTreeNode{``0})" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="Podaga.PersistentCollections.Tree" /><meta name="guid" content="7a6819f3-9b0c-594a-78d5-cf707ba0480d" /><meta name="Description" content="Creates an iterator for the tree and pushes the root node (if the tree is not empty) on top of the stack. This makes other iterator algorithms operate over the complete tree." /><meta name="tocFile" content="../toc/IDAEE.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">Podaga libraries</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Iterator<wbr />Algorithms<span id="LST85284005_0" data-languageSpecificText="cpp=::|nu=."></span>Get<wbr />Iterator<span id="LST85284005_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TValue</span><span id="LST85284005_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Method</h1><div class="summary">
            Creates an iterator for the tree and pushes the root node (if the tree is not empty) on top of the stack.
            This makes other iterator algorithms operate over the complete tree.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="841cf562-f2fb-1b6a-2471-034e9b7971c6.htm">Podaga.PersistentCollections.Tree</a><br /><strong>Assembly:</strong> Podaga.PersistentCollections (in Podaga.PersistentCollections.dll) Version: 1.0.0+ba197d4104f271fdbf8c6854c0c7a2a7373ab646<div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="identifier">TreeIterator</span>&lt;TValue&gt; <span class="identifier">GetIterator</span>&lt;TValue&gt;(
	<span class="keyword">this</span> <span class="identifier">JoinableTreeNode</span>&lt;TValue&gt; <span class="parameter">this</span>
)
</code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">this</span>  <a href="93d88823-e7b4-0812-26cb-5aa28c19e71c.htm">JoinableTreeNode</a><span id="LST85284005_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TValue</span></span><span id="LST85284005_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The tree for which to create the iterator.</dd></dl><h4 class="quickLinkHeader">Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TValue</span></dt><dd>Tree element type.</dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="2af394ed-1c09-ca21-de7b-b8ae11c1844b.htm">TreeIterator</a><span id="LST85284005_5" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TValue</span></span><span id="LST85284005_6" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span><br />An iterator instance.<h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="93d88823-e7b4-0812-26cb-5aa28c19e71c.htm">JoinableTreeNode</a><span id="LST85284005_7" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TValue</span></span><span id="LST85284005_8" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="2bb573a6-aada-0d92-e036-66d9dcbc13a0.htm">IteratorAlgorithms Class</a></div><div><a href="841cf562-f2fb-1b6a-2471-034e9b7971c6.htm">Podaga.PersistentCollections.Tree Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Type Parameters</a></li><li><a class="quickLink">Return Value</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>